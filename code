''''
4.Aim:
      To write a python program to make database connectivity for executing SQL query.
'''
#python code
import mysql.connector
mydb = mysql.connector.connect(host="localhost",user="root",password="mypass",database="mydatabase")
mycursor = mydb.cursor()
mycursor.execute("SELECT * FROM customers")
myresult = mycursor.fetchall()
for x in myresult:
    print(x)
    
'''
Output:
        (1, 'John', 'Highway 21')
        (2, 'Peter', 'Lowstreet 27')
        (3, 'Amy', 'Apple st 652')
        (4, 'Hannah', 'Mountain 21')
        (5, 'Michael', 'Valley 345')
   Result:
     The above program was executed successfully
'''
---------------------------------------------------------------------------------------------------

'''
5.Aim:
      To write a python program to make database connectivity for executing SQL query.
'''

import mysql.connector
mydb = mysql.connector.connect(host="localhost",user="root",password="mypass",
database="mydatabase")
mycursor = mydb.cursor()
sql = "SELECT * FROM customers WHERE address = %s"
adr = ("Apple st 652",)
mycursor.execute(sql, adr)
myresult = mycursor.fetchall()
for x in myresult:
      print(x)
      
'''
Output:
      (3, 'Amy', 'Apple st 652')
 Result:
     The above program was executed successfully.
'''
-----------------------------------------------------------------------------------------------------

'''
6. Aim:
        To write a python program to make database connectivity for executing SQL query.
'''

import mysql.connector
mydb = mysql.connector.connect(host="localhost",user="root",password="mypass",database="mydatabase")
mycursor = mydb.cursor()
sql = "DELETE FROM customers WHERE address = 'Mountain 21'"
mycursor.execute(sql)
mydb.commit()
print(mycursor.rowcount, "record(s) deleted")

'''
Output:
       1 record(s) deleted
Result:
     The above program was executed successfully.
'''
---------------------------------------------------------------------------------------------------

#employee_details
stk=[]
top=-1
def line():
    print("--"*10)
def isempty():
    global stk
    if stk==[]:
        print("stackis empty!!")
    else:
        None
def push():
    global stk
    global top
    empno=int(input("Enter the employee number to push:"))
    ename=input("enter the employee name:")
    stk.append([empno,ename])
    top=len(stk)-1
def display():
    global stk
    global top
    if top==-1:
        isempty()
    else:
        top=len(stk)-1
        print(stk(top),"<--top")
        for i in range(top-1,-1,-1):
            print(stk[i])
def popele():
    global stk 
    global top
    if top==-1:
        isempty()
    else:
        stk.pop()
        top=top-1
def main():
    while True:
        line()
        print("1.push")
        print("2.pop")
        print("3.display")
        print("4.exit")
        ch=int(input("enter your choice:"))
        if ch==1:
            push()
            print("element pushed")
        elif ch==2:
            popele()
        elif ch==3:
            display()
        else:
            
            print("invalid choice")
            
main()

---------------------------------------------------------------------------------------------------
#Write a python program to check whether a string is a palindrome or not using stack.
stack = []
top = -1

# push function
def push(ele):
    global top
    top += 1
    stack[top] = ele
# pop function
def pop():
    global top
    ele = stack[top]
    top -= 1
    return ele
# Function that returns 1 if string is a palindrome
def isPalindrome(string):
    global stack
    length = len(string)
# Allocating the memory for the stack
    stack = ['0'] * (length + 1)
# Finding the mid
    mid = length // 2
    i = 0
    while i < mid:
        push(string[i])
        i += 1
# Checking if the length of the string is odd, if odd then neglect the middle character
    if length % 2 != 0:
        i += 1
# While not the end of the string
    while i < length:
        ele = pop()
# If the characters differ then the given string is not a palindrome
        if ele != string[i]:
            return False
        i += 1
    return True
string = input("Enter string to check:")
if isPalindrome(string):
    print("Yes, the string is a palindrome")
else:
    print("No, the string is not a palindrome")
---------------------------------------------------------------------------------------------------

